'''
Module for AOD analysis functions.
'''

import logging
import numpy as np
from scipy.stats import ttest_1samp
from scipy.stats import ttest_ind


def regress_to_stims(activations, targets, novels):
    dt = targets.shape[0]

    assert targets.shape == novels.shape
    assert activations.shape[1] % dt == 0

    n_subjects = activations.shape[1] // dt
    targets_novels = np.concatenate([targets[:, None], novels[:, None]], axis=1)

    target_ttests = []
    novel_ttests = []
    for i in xrange(activations.shape[0]):
        betas = np.zeros((n_subjects, 2))
        for s in xrange(n_subjects):
            stats = ols.ols(activations[i, dt * s : dt * (s + 1)], 
                            targets_novels)
            betas[s] = stats.b[1:]

        target_ttests.append(ttest_1samp(betas[:, 0], 0))
        novel_ttests.append(ttest_1samp(betas[:, 1], 0))

    return target_ttests, novel_ttests
